basePath: /ai
definitions:
  models.ErrorDetail:
    properties:
      code:
        type: string
      message:
        type: string
      metadata:
        $ref: '#/definitions/models.Properties'
    type: object
  models.ErrorResponse:
    properties:
      errors:
        items:
          $ref: '#/definitions/models.ErrorDetail'
        type: array
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.Password:
    properties:
      confirmPassword:
        type: string
      password:
        type: string
    type: object
  models.Properties:
    properties:
      additionalProp1:
        type: string
      additionalProp2:
        type: string
      additionalProp3:
        type: string
    type: object
  models.Question:
    properties:
      correctAnswer:
        type: string
      id:
        type: integer
      title:
        type: string
      variants:
        items:
          $ref: '#/definitions/models.Variant'
        type: array
    type: object
  models.Quiz:
    properties:
      countOfQuestion:
        type: integer
      id:
        type: integer
      isPassed:
        type: boolean
      passedCount:
        type: integer
      points:
        type: integer
      questions:
        items:
          $ref: '#/definitions/models.Question'
        type: array
      title:
        type: string
    type: object
  models.Submission:
    properties:
      answers:
        type: string
      points:
        type: integer
    type: object
  models.SuccessResponse:
    properties:
      metadata:
        $ref: '#/definitions/models.Properties'
      result: {}
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      roleId:
        type: integer
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      roleId:
        type: integer
    type: object
  models.Variant:
    properties:
      title:
        type: string
    type: object
host: 77.240.39.57
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /forgot-password:
    post:
      parameters:
      - description: Email address
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Forgot Password
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: LogOut
      tags:
      - auth
  /quiz:
    post:
      consumes:
      - application/json
      parameters:
      - description: quiz
        in: body
        name: quiz
        required: true
        schema:
          $ref: '#/definitions/models.Quiz'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /quiz/{quizId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: quizId
        in: path
        name: quizId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /quiz/admin:
    get:
      consumes:
      - application/json
      parameters:
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /quiz/admin/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /quiz/generate:
    post:
      parameters:
      - description: text
        in: formData
        name: text
        required: true
        type: string
      - description: count
        in: formData
        name: count
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /quiz/submit/{quizId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: quizId
        in: path
        name: quizId
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Submission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Student
  /quiz/user:
    get:
      consumes:
      - application/json
      parameters:
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Student
  /quiz/user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Student
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: SignUp
      tags:
      - auth
  /students/{quizId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: quizId
        in: path
        name: quizId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /students/quiz/{quizId}/add/{studentId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: quizId
        in: path
        name: quizId
        required: true
        type: integer
      - description: studentId
        in: path
        name: studentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Quiz
  /students/quiz/{quizId}/result:
    get:
      consumes:
      - application/json
      parameters:
      - description: quizId
        in: path
        name: quizId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Student
  /user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /user/reset-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Change password
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/models.Password'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Reset password
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
